summary(lm7.8)
summary(lm7.8)
?I
head(df)
lm7.8 <- lm(y ~ x1 + I(x1^2) + x2 + I(x2) + x3 + I(x3), data = df)
summary(lm7.8)
df$x2^2
df$x3^2
lm7.8 <- lm(y ~ x1 + I(x1^2) + x2 + I(x2) + x3 + I(x3), data = df)
summary(lm7.8)
lm7.8 <- lm(y ~ x1 + I(x1^2) + x2 + I(x2) + x3 + I(x3), data = df)
summary(lm7.8)
lm7.8 <- lm(y ~ x1 + I(x1^2) + x2 + I(x2^2) + x3 + I(x3^2), data = df)
summary(lm7.8)
glance(lm7.8)
lm7.8_summ <- summary(lm7.8)
(lm7.8_summ$fstatistic
lm7.8_summ$fstatistic
lm7.8_summ$fstatistic
lm7.8_summ
lm7.8_summ
autoplot(lm7.8, which = 1:6, ncol = 2, label.size = 3)
anova(lm7.8)
library(car)
Anova(lm7.8)
Anova(lm7.8, type=2))
Anova(lm7.8, type=2)
lm7.8_summ
?Anova
Anova(lm7.8, type="II")
anova(lm7.8)
options(contrasts=c(unordered="contr.treatment", ordered="contr.poly"))
options(contrasts=c(unordered="contr.sum",       ordered="contr.poly"))
Anova(lm7.8, type="II")
Anova(lm7.8, type="I")
Anova(lm7.8, type="I")
anova(lm7.8, type="II")
anova(lm7.8)
anova(lm7.8)
vif(lm7.8)
newdata <- c(8, 3, 5)
predict(lm7.8, newdata = newdata)
head(df)
newdata <- c(8, 3, 5)
predict(lm7.8, newdata = newdata)
newdata <- c(x1 = 8, x2 = 3, x3 = 5)
newdata
predict(lm7.8, newdata = newdata)
?predict
predict(, newdata = newdata, interval = c("prediction"))
predict(lm7.8, newdata = newdata, interval = c("prediction"))
newdata <- data.frame(c(x1 = 8, x2 = 3, x3 = 5))
newdata <- data.frame(c(x1 = 8),c(x2 = 3),c(x3 = 5))
View(newdata)
newdata <- data.frame(x1 = c( 8),c(x2 = 3),c(x3 = 5))
newdata
newdata <- data.frame(x1 = c( 8),x2 = c(3), x3 = c(5))
newdata
predict(lm7.8, newdata = newdata, interval = c("prediction"))
predict(lm7.8, newdata = newdata, interval = c("prediction"), level = 0.95)
predict(lm7.8, newdata = newdata, interval = c("prediction"), level = 0.95)
head(df)
lm7.20 <- lm(y ~ x1 + x2 + x3 + x1*x2 + x1*x3 + x2*x3)
lm7.20 <- lm(y ~ x1 + x2 + x3 + x1*x2 + x1*x3 + x2*x3, data = df)
predict(lm7.20, newdata = newdata, interval = c("prediction"), level = 0.95)
predict(lm7.8, newdata = newdata, interval = c("prediction"), level = 0.95)
predict(lm7.20, newdata = newdata, interval = c("prediction"), level = 0.95)
p <- predict(lm7.20, newdata = newdata, interval = c("prediction"), level = 0.95)
predict(lm7.20, newdata = newdata, interval = c("prediction"), level = 0.95)
predict(lm7.20, newdata = newdata, interval = c("prediction"), level = 0.95) %>% print() -> p
predict(lm7.8, newdata = newdata, interval = c("prediction"), level = 0.95) %>%  print() -> p
p[2]
p[3] - p[2]
p[3] - p[2]
newdata <- data.frame(x1 = c( 8),x2 = c(3), x3 = c(5))
predict(lm7.8, newdata = newdata, interval = c("prediction"), level = 0.95) %>%  print() -> p
p[3] - p[2]
lm7.20 <- lm(y ~ x1 + x2 + x3 + x1*x2 + x1*x3 + x2*x3, data = df)
predict(lm7.20, newdata = newdata, interval = c("prediction"), level = 0.95) %>% print() -> p
p[3] - p[2]
table.b3
auto <- table.b3
head(auto)
lm8.4 <- lm(y ~ x1, data = auto)
summary(lm8.4)
lm8.4 <- lm(y ~ x1 +x11 , data = auto)
summary(lm8.4)
lm8.4_b <- lm(y ~ x1 +x11 + x1*x11 , data = auto)
summary(lm8.4_b)
lm8.4_a <- lm(y ~ x1 +x11 , data = auto)
lm8.4_a <- lm(y ~ x1 +x11 , data = auto)
summary(lm8.4_a)
summary(lm8.4_b)
auto %>%
ggplot(aes(x1, y))
auto %>%
ggplot(aes(x1, y))+
geom_boxplot()
auto %>%
ggplot(aes(x1, y))+
geom_point()
auto %>%
ggplot(aes(x1, y, color = x11))+
geom_point()
auto$x11
ggplot(aes(x1, y, color = as.factor(x11))+
auto %>%
ggplot(aes(x1, y, color = as.factor(x11)))+
geom_point()
auto %>%
ggplot(aes(x1, y, color = as.factor(x11)))+
geom_point()
auto %>%
ggplot(aes(x1, y, color = as.factor(x11)))+
geom_point()
auto %>%
ggplot(aes(x11, y, color = as.factor(x11)))+
geom_point()
auto %>%
ggplot(aes(x1 , y, color = as.factor(x11)))+
geom_point()
summary(lm8.4)
summary(lm8.4_b)
summary(lm8.4_a)
auto %>%
ggplot(aes(x1 , y, color = as.factor(x11)))+
geom_point()+
geom_smooth(formula = y ~ x, method = "lm")
auto %>%
ggplot(aes(x1 , y))+
geom_point(aes( color = as.factor(x11)))+
geom_smooth(formula = y ~ x, method = "lm", )
auto %>%
ggplot(aes(x1 , y))+
geom_point(aes(color = as.factor(x11)))+
geom_smooth(formula = y ~ x, method = "lm", )
library(tidyverse)
library(ggfortify)
library(stargazer)
library(broom)
library(knitr)
library(car)
auto %>%
ggplot(aes(x1 , y))+
geom_point(aes(color = as.factor(x11)))+
geom_smooth(formula = y ~ x, method = "lm", )
auto %>%
ggplot(aes(x1 , y))+
geom_point(aes(color = as.factor(x11)))+
geom_smooth(formula = y ~ x, method = "lm")
auto %>%
ggplot(aes(x1 , y))+
geom_point(aes(color = as.factor(x11)))+
geom_smooth(formula = y ~ x, method = "lm")
auto <- table.b3
lm8.4_a <- lm(y ~ x1 +x11 , data = auto)
head(auto)
head(auto)
head(auto)
head(auto)
ridge9.19 <- lm.ridge(y ~ ., auto ,lambda=seq(0,50,by=0.1))
library(lm.ridge)
ridge9.19 <- lm.ridge(y ~ ., auto ,lambda=seq(0,50,by=0.1))
install.packages("lm.ridge")
install.packages("ridge")
linRidgeMod <- linearRidge(y ~ ., data = auto)  # the ridge regression model
library(ridge)
ridge9.19 <- linearRidge(y ~ ., data = auto)  # the ridge regression model
summary(ridge9.19)
?linearRidge
library(MASS)
fit.ridge <- lm.ridge(formula= y ~ ., data= auto)
#OLS regression
fit.ols <- lm(formula= y ~ ., data= auto)
#Let's compare the Coefficients
table=cbind(coef(fit.ridge),coef(fit.ols))
colnames(table)=c("Ridge","OLS")
print(table)
fit.ridge <- lm.ridge(formula= y ~ ., data= auto, lambda=seq(from=0,to=100,by=1))
matplot(x=t(fit.ridge$coef),type='l',
main="Ridge Regression Lambda vs Coefficient Plot",
xlab="Lambda Values",
ylab="Coefficients",
col=c("black","red","blue","green"))
grid()
legend("topright",legend=rownames(fit.ridge$coef),
fill=c("black","red","blue","green"),
bty='n',
cex=1)
fit.ridge <- lm.ridge(formula= y ~  x1 +x11, data= auto, lambda=seq(from=0,to=100,by=1))
matplot(x=t(fit.ridge$coef),type='l',
main="Ridge Regression Lambda vs Coefficient Plot",
xlab="Lambda Values",
ylab="Coefficients",
col=c("black","red","blue","green"))
grid()
legend("topright",legend=rownames(fit.ridge$coef),
fill=c("black","red","blue","green"),
bty='n',
cex=1)
fit.ridge <- lm.ridge(formula= y ~  ., data= auto, lambda=seq(from=0,to=100,by=1))
matplot(x=t(fit.ridge$coef),type='l',
main="Ridge Regression Lambda vs Coefficient Plot",
xlab="Lambda Values",
ylab="Coefficients",
col=c("black","red","blue","green"))
grid()
legend("topright",legend=rownames(fit.ridge$coef),
fill=c("black","red","blue","green"),
bty='n',
cex=1)
#OLS regression
fit.ols <- lm(formula= y ~ ., data= auto)
#Let's compare the Coefficients
table=cbind(coef(fit.ridge),coef(fit.ols))
colnames(table)=c("Ridge","OLS")
print(table)
fit.ridge <- lm.ridge(formula= y ~  ., data= auto, lambda=seq(from=0,to=100,by=1))
matplot(x=t(fit.ridge$coef),type='l',
main="Ridge Regression Lambda vs Coefficient Plot",
xlab="Lambda Values",
ylab="Coefficients",
col=c("black","red","blue","green"))
grid()
legend("topright",legend=rownames(fit.ridge$coef),
fill=c("black","red","blue","green"),
bty='n',
cex=1)
#OLS regression
fit.ols <- lm(formula= y ~ ., data= auto)
#Let's compare the Coefficients
table=cbind(coef(fit.ridge),coef(fit.ols))
fit.ridge <- lm.ridge(formula= y ~  ., data= auto, lambda=seq(from=0,to=100,by=1))
matplot(x=t(fit.ridge$coef),type='l',
main="Ridge Regression Lambda vs Coefficient Plot",
xlab="Lambda Values",
ylab="Coefficients",
col=c("black","red","blue","green"))
grid()
legend("topright",legend=rownames(fit.ridge$coef),
fill=c("black","red","blue","green"),
bty='n',
cex=1)
fit.ridge$coef
fit.ridge <- lm.ridge(formula= y ~  ., data= auto, lambda=seq(from=0,to=20,by=1))
matplot(x=t(fit.ridge$coef),type='l',
main="Ridge Regression Lambda vs Coefficient Plot",
xlab="Lambda Values",
ylab="Coefficients",
col=c("black","red","blue","green"))
grid()
legend("topright",legend=rownames(fit.ridge$coef),
fill=c("black","red","blue","green"),
bty='n',
cex=1)
fit.ridge <- lm.ridge(formula= y ~  ., data= auto, lambda=seq(from=0,to=10,by=1))
matplot(x=t(fit.ridge$coef),type='l',
main="Ridge Regression Lambda vs Coefficient Plot",
xlab="Lambda Values",
ylab="Coefficients",
col=c("black","red","blue","green"))
grid()
legend("topright",legend=rownames(fit.ridge$coef),
fill=c("black","red","blue","green"),
bty='n',
cex=1)
matplot(x=t(fit.ridge$coef),type='l',
main="Ridge Regression Lambda vs Coefficient Plot",
xlab="Lambda Values",
ylab="Coefficients",
col=c("black","red","blue","green","darkgreen"))
grid()
legend("topright",legend=rownames(fit.ridge$coef),
fill=c("black","red","blue","green","darkgreen"),
bty='n',
cex=1)
head(auto)
matplot(x=t(fit.ridge$coef),type='l',
main="Ridge Regression Lambda vs Coefficient Plot",
xlab="Lambda Values",
ylab="Coefficients",
col=c("black","red","blue","green","darkgreen","dodgerblue3","gray63","khaki3","lightpink","orchid","tan1"))
grid()
legend("topright",legend=rownames(fit.ridge$coef),
fill=c("black","red","blue","green","darkgreen","dodgerblue3","gray63","khaki3","lightpink","orchid","tan1"),
bty='n',
cex=1)
fit.ridge9.19 <- lm.ridge(formula= y ~  ., data= auto, lambda=seq(from=0,to=10,by=1))
matplot(x=t(fit.ridge9.19$coef),type='l',
main="Ridge Regression Lambda vs Coefficient Plot",
xlab="Lambda Values",
ylab="Coefficients",
col=c("black","red","blue","green","darkgreen","dodgerblue3","gray63","khaki3","lightpink","orchid","tan1"))
grid()
legend("topright",legend=rownames(fit.ridge9.19$coef),
fill=c("black","red","blue","green","darkgreen","dodgerblue3","gray63","khaki3","lightpink","orchid","tan1"),
bty='n',
cex=1)
#OLS regression
lm.ridge9.19 <- lm(formula= y ~ x1+x3+x5+x8+x9., data= auto)
summary(lm.ridge9.19)
#OLS regression
lm.ridge9.19 <- lm(formula= y ~ x1+x3+x5+x8+x9., data= auto)
summary(lm.ridge9.19)
#OLS regression
lm.ridge9.19 <- lm(formula= y ~ x1+x3+x5+x8+x9, data= auto)
summary(lm.ridge9.19)
#OLS regression
lm.ridge9.19 <- lm(formula= y ~ x1+x3, data= auto)
summary(lm.ridge9.19)
lm.ridge9.19 <- lm(formula= y ~ x1+x3+x5+x8+x10, data= auto)
summary(lm.ridge9.19)
summary(lm.ridge9.19)
summary(lm.ridge9.19) %>% str(.)
library(tidyverse)
summary(lm.ridge9.19) %>% str(.)
summary(lm.ridge9.19)$r.squared
summary(lm.ridge9.19)$r.squared %>% round(2)
lm.full9.19 <-  lm(formula= y ~., data= auto)
summary(lm.full9.19)$r.squared %>% round(2) - summary(lm.ridge9.19)$r.squared %>% round(2)
summary(lm.full9.19)$r.squared %>% round(2)
summary(lm.ridge9.19)$r.squared %>% round(2)
(summary(lm.full9.19)$r.squared %>% round(2) - summary(lm.ridge9.19)$r.squared %>% round(2) ) * 100
scale(auto)
scale(auto) -> pp
p
pp
scale(auto) %>% as.data.frame(.)
scale(auto[, -1]) %>% as.data.frame(.)
head(auto)
fit.ridge9.19 <- lm.ridge(formula= y ~  ., data= scale(auto), lambda=seq(from=0,to=10,by=1))
matplot(x=t(fit.ridge9.19$coef),type='l',
main="Ridge Regression Lambda vs Coefficient Plot",
xlab="Lambda Values",
ylab="Coefficients",
col=c("black","red","blue","green","darkgreen","dodgerblue3","gray63","khaki3","lightpink","orchid","tan1"))
grid()
legend("topright",legend=rownames(fit.ridge9.19$coef),
fill=c("black","red","blue","green","darkgreen","dodgerblue3","gray63","khaki3","lightpink","orchid","tan1"),
bty='n',
cex=1)
#OLS regression
# lm.ridge9.19 <- lm(formula= y ~ x1+x3, data= auto)
lm.ridge9.19 <- lm(formula= y ~ x1+x3+x5+x8+x10, data= scale(auto))
fit.ridge9.19 <- lm.ridge(formula= y ~  ., data= scale(auto), lambda=seq(from=0,to=10,by=1))
fit.ridge9.19 <- lm.ridge(formula= y ~  ., data= as.data.frame(scale(auto)), lambda=seq(from=0,to=10,by=1))
matplot(x=t(fit.ridge9.19$coef),type='l',
main="Ridge Regression Lambda vs Coefficient Plot",
xlab="Lambda Values",
ylab="Coefficients",
col=c("black","red","blue","green","darkgreen","dodgerblue3","gray63","khaki3","lightpink","orchid","tan1"))
grid()
#OLS regression
# lm.ridge9.19 <- lm(formula= y ~ x1+x3, data= auto)
lm.ridge9.19 <- lm(formula= y ~ x1+x3+x5+x8+x10, data= as.data.frame(scale(auto)))
lm.full9.19 <-  lm(formula= y ~., data= auto)
summary(lm.ridge9.19)
(summary(lm.full9.19)$r.squared %>% round(2) - summary(lm.ridge9.19)$r.squared %>% round(2) ) * 100
#OLS regression
# lm.ridge9.19 <- lm(formula= y ~ x1+x3, data= auto)
lm.ridge9.19 <- lm(formula= y ~ x1+x3+x5+x8+x10, data= auto)
lm.full9.19 <-  lm(formula= y ~., data= auto)
summary(lm.ridge9.19)
prcomp(auto, center = TRUE, scale. = TRUE)
auto
drop_na(auto)
auto <- drop_na(auto)
prcomp(auto, center = TRUE, scale. = TRUE)
pc9.22 <- prcomp(auto, center = TRUE, scale. = TRUE)
plot(ir.pca, type = "l")
plot(pc9.22, type = "l")
predict(pc9.22, auto)
pcauto <- as.data.frame(predict(pc9.22, auto), stringsAsFactors = FALSE)
pcauto$y <- auto$y
lmpc9.22 <- lm(formula = y ~ PC1, pcau)
lmpc9.22 <- lm(formula = y ~ PC1, pcauto)
lmpc9.22 <- lm(formula = y ~ PC1 + PC2 + PC3, pcauto)
as.data.frame(predict(princ,dmTrain),
stringsAsFactors = FALSE)
lm.full9.19$residuals ^2
sum(lmpc9.22$residuals ^ 2)
sum(lm.full9.19$residuals ^2)
sum(lmpc9.22$residuals ^ 2)
sum(lmpc9.22$residuals ^ 2)
sum(lm.full9.19$residuals ^2)
library(leaps)
methanol <- read.csv(file = "data/data-table-B20.csv")
head(methanol)
regsubsets.out <-
regsubsets(y ~ .,
data = methanol,
nbest = 1,       # 1 best model for each number of predictors
nvmax = NULL,    # NULL for no limit on number of variables
force.in = NULL, force.out = NULL,
method = "exhaustive")
regsubsets.out
summary.out <- summary(regsubsets.out)
as.data.frame(summary.out$outmat)
plot(regsubsets.out, scale = "adjr2", main = "Adjusted R^2")
## Adjusted R2
res.legend <-
subsets(regsubsets.out, statistic="adjr2", legend = FALSE, min.size = 5, main = "Adjusted R^2")
library(car)
layout(matrix(1:2, ncol = 2))
## Adjusted R2
res.legend <-
subsets(regsubsets.out, statistic="adjr2", legend = FALSE, min.size = 5, main = "Adjusted R^2")
## Mallow Cp
res.legend <-
subsets(regsubsets.out, statistic="cp", legend = FALSE, min.size = 5, main = "Mallow Cp")
abline(a = 1, b = 1, lty = 2)
regsubsets.out <-
regsubsets(y ~ .,
data = methanol,
nbest = 1,       # 1 best model for each number of predictors
nvmax = NULL,    # NULL for no limit on number of variables
force.in = NULL, force.out = NULL,
method = "exhaustive")
regsubsets.out
subsets(regsubsets.out, statistic="adjr2", legend = FALSE, min.size = 5, main = "Adjusted R^2")
subsets(regsubsets.out, statistic="adjr2", legend = FALSE, min.size = 5, main = "Adjusted R^2")
subsets(regsubsets.out, statistic="adjr2", legend = FALSE, min.size = 5, main = "Adjusted R^2")
subsets(regsubsets.out, statistic="adjr2", legend = FALSE, min.size = 5, main = "Adjusted R^2")
## Mallow Cp
res.legend <- subsets(regsubsets.out, statistic="cp", legend = FALSE, min.size = 5, main = "Mallow Cp")
## Mallow Cp
res.legend <- subsets(regsubsets.out, statistic="cp", legend = FALSE, min.size = 10, main = "Mallow Cp")
## Adjusted R2
res.legend <- subsets(regsubsets.out, statistic="adjr2", legend = FALSE, min.size = 5, main = "Adjusted R^2")
plot(regsubsets.out, scale = "adjr2", main = "Adjusted R^2")
?step
step(lm(y ~ ., data = methanol))
plot(regsubsets.out, scale = "adjr2", main = "Adjusted R^2")
step(lm(y ~ ., data = methanol))
df <- read.csv(file = "data/data-prob-12-8.csv")
head(df)
nls(formula = y ~ theta * exp(theta*x))
df %>% ggplot(aes(x, y, df))+geom_point()
lm(formula = y ~ log(log(x)))
lm(formula = y ~ log(x))
lm(formula = y ~ log(x), df)
lm12.8 <- lm(formula = y ~ log(x), df)
summary(lm12.8)
lm12.8 <- lm(formula = log(y) ~ x, df)
summary(lm12.8)
log(-0.28467)
lm12.8 <- lm(formula = log(y) ~ x, df)
summary(lm12.8)
log(-0.28467)
?log
?ln
lm12.8 <- lm(formula = log10(y) ~ x, df)
summary(lm12.8)
head(df)
str(df)
log(df$y)
log10(df$y)
lm12.8 <- lm(formula = log(y) ~ x, df)
summary(lm12.8)
exp(-0.28467)
nls(formula = y ~ theta1 * exp(theta2*x), start = list(theta1 = 0.7522625, theta2 = 0.53261))
nls(formula = y ~ theta1 * exp(theta2*x), data = df, start = list(theta1 = 0.7522625, theta2 = 0.53261))
nls12.8 <- nls(formula = y ~ theta1 * exp(theta2*x), data = df, start = list(theta1 = 0.7522625, theta2 = 0.53261))
summary(nls12.8)
summary(nls12.8)
0.8666^2
0.8666^1
0.8666^2
0.8666^3
library(tidyverse)
library(ggfortify)
library(stargazer)
library(broom)
library(knitr)
library(car)
summary(nls12.8)
autoplot(nls12.8)
plot(nls12.8)
plot(nls12.8)
qqplot(summary(nls12.8))
plot(nls12.8)
qqplot(summary(nls12.8))
qqplot(summary(nls12.8))
nls12.8_summ <- summary(nls12.8) %>% print()
qqplot(nls12.8_summ$residuals)
library(nlstools)
install.packages("nlstools")
library(nlstools)
nlsResiduals(nls12.8)
nls12.8_res <- nlsResiduals(nls12.8)
plot(nls12.8_res)
autoplot(nls12.8_res)
plot(nls12.8_res)
library(nlstools)
df
df
df$x2 <- NA
df
df$x2[,1:7]
df$x2[1:7,]
df$x2[1:7]
df$x2 <- 0
df$x2[7:14] <- 1
df
df$x2 <- 0
df$x2[8:14] <- 1
df
nls12.9 <- nls(formula = y ~ thetha3* x2 + theta1 * exp(theta2*x), data = df, start = list(theta1 = 0.7522625, theta2 = 0.53261, theta3 = 0))
nls12.9 <- nls(formula = y ~ theta3* x2 + theta1 * exp(theta2*x), data = df, start = list(theta1 = 0.7522625, theta2 = 0.53261, theta3 = 0))
summary(nls12.9)
?stargazer
stargazer(lm5.2_b, header = FALSE, report = "vc*p", type = "latex")
